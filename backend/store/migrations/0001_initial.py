# Generated by Django 3.1.3 on 2020-11-22 09:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField(max_length=300)),
                ('invoice_abbreviation', models.CharField(max_length=5)),
                ('address', models.CharField(max_length=200)),
                ('mobile_contact', models.CharField(max_length=15)),
                ('office_contact', models.CharField(max_length=15)),
                ('logo', models.ImageField(upload_to='images/logos')),
                ('email', models.EmailField(max_length=254)),
                ('facebook', models.URLField()),
                ('twitter', models.URLField()),
                ('website', models.URLField()),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='FeaturedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=50)),
                ('image', models.ImageField(upload_to='images/featured_products')),
                ('is_active', models.BooleanField(default=True)),
                ('has_button', models.BooleanField(default=True)),
                ('button_url', models.URLField()),
                ('button_text', models.CharField(blank=True, max_length=10)),
                ('date_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'featured_products',
            },
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('title', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, default=0, help_text='monetary worth of code', max_digits=9)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
            ],
            options={
                'db_table': 'gifts',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'manufactureres',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('time', models.TimeField(auto_now=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('is_user', models.BooleanField(default=False)),
                ('invoice_number', models.CharField(max_length=20)),
                ('status', models.IntegerField(choices=[(0, 'Cancelled'), (1, 'Pending'), (2, 'Fulfilled')], default=1)),
                ('coupon_code', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='store.gift')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='PriceSchedule',
            fields=[
                ('product_item', models.IntegerField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'price_schedules',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('slug', models.SlugField(default='')),
                ('min_stock', models.IntegerField(default=0)),
                ('number_in_stock', models.IntegerField(default=0)),
                ('description', models.TextField()),
                ('product_image', models.ImageField(upload_to='images/products')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('regular_price', models.DecimalField(decimal_places=2, default=0, help_text='this is the old or regular price of product in traditional market that the shop is selling against by offering a better price', max_digits=9)),
                ('new_price', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('SKU', models.TextField(blank=True, max_length=50)),
                ('product_video', models.FileField(blank=True, upload_to='videos/products')),
                ('purchase_notes', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('gift_eligible', models.BooleanField(default=False)),
                ('free_delivery', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('image', models.ImageField(upload_to='images/category')),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(default='', unique=True)),
            ],
            options={
                'db_table': 'product_categories',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'product_deals',
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('date', models.DateField(auto_now=True)),
                ('rating', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'product_ratings',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('date', models.DateField(auto_now=True)),
                ('comment', models.TextField()),
            ],
            options={
                'db_table': 'product_reviews',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=150, unique=True)),
                ('date_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'stock_status',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=150)),
                ('date', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'product_tags',
            },
        ),
        migrations.CreateModel(
            name='TaxClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=150, unique=True)),
                ('date_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'tax_classes',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaxStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=150, unique=True)),
                ('date_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'tax_statuses',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/category')),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(default='', unique=True)),
                ('name', models.CharField(max_length=100)),
                ('related_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.productcategory')),
            ],
            options={
                'db_table': 'subcategories',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('accepted', models.BooleanField(default=False)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order')),
            ],
        ),
        migrations.CreateModel(
            name='ProductGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/gallery/products')),
                ('date', models.DateField(auto_now=True)),
                ('time', models.TimeField(auto_now=True)),
                ('product_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'db_table': 'product_gallery',
            },
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('feature', models.CharField(max_length=300)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='store.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='gallery',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.productgallery'),
        ),
        migrations.AddField(
            model_name='product',
            name='gifts',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.gift'),
        ),
        migrations.AddField(
            model_name='product',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='store.manufacturer'),
        ),
        migrations.AddField(
            model_name='product',
            name='ratings',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.productrating'),
        ),
        migrations.AddField(
            model_name='product',
            name='reviews',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.productreview'),
        ),
        migrations.AddField(
            model_name='product',
            name='sub_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.subcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(to='store.Tag'),
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('quantity', models.IntegerField(default=0)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order')),
                ('product_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'db_table': 'order_details',
            },
        ),
    ]
